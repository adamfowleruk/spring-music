# # Option 1: Basic HTTP only
# apiVersion: networking.istio.io/v1alpha3
# kind: Gateway
# metadata:
#   name: sm-gateway
#   namespace: sm-inmemory
# spec:
#   selector:
#     istio: ingressgateway # use istio default controller
#   servers:
#   - port:
#       number: 80
#       name: http
#       protocol: HTTP
#     hosts:
#     - "*"
# ---
# Option 2: Secure TLS termination in Istio
# See https://istio.io/latest/docs/tasks/traffic-management/ingress/secure-ingress/
# Note: Do this before applying: kubectl create -n istio-system secret tls sm-tls-credential --key=sm.adamfowler.co.uk.key --cert=sm.adamfowler.co.uk.crt
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: sm-gateway
  namespace: sm-inmemory
spec:
  selector:
    istio: ingressgateway # use istio default ingress gateway
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls: # Use ISTIO_MUTUAL not SIMPLE to FORCE mTLS (STRICT forced in PeerAuthentication)
      mode: SIMPLE
      credentialName: sm-tls-credential # must be the same as secret
    hosts:
    - "*"
    # - sm.adamfowler.co.uk
---
# Rewriteany incoming requests foraddressbook.adamfowler.org and apply accept URL restrictions
# Keep same destination host (actually means 'dont rewriteclient hostname requested')
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: spring-music-istio-svc
  namespace: sm-inmemory
spec:
  hosts: # Map to all hosts mapped to this load balancer
  - "*"
  # - "sm.adamfowler.co.uk"
  gateways:
  - sm-gateway
  http:
  # option 1: Entire hostname + subdomain
  # - route:
  #   - destination:
  #       host: address-book-manage-api-svc
  # Option 2: By URL components as well as hostname andsubdomain(better as allows /v1 and /v2 urls)
  - match:
    - uri:
        prefix: /actuator
    route:
    - destination: # Destination is a Kubernetes Service name and NOT a physical hostname
        host: spring-music-service
        subset: v1
    fault:
      abort:
        percentage:
          value: 100
        httpStatus: 404
  - match:
    - uri:
        exact: /
    - uri:
        prefix: /
    route:
    - destination: # Destination is a Kubernetes Service name and NOT a physical hostname
        host: spring-music-service
        subset: v1
      headers: # Setting replacement headers rather than rewriting response content (safer, left to the application)
        response:
          remove:
            - "server"
            - "x-powered-by"
            - "x-envoy-upstream-service-time"
---
# Now the destination rule which maps the subsets onto the specific container versions
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: spring-music-dest
  namespace: sm-inmemory
spec:
  host: spring-music-service
  subsets:
  - name: v1
    labels:
      app: spring-music
---